<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.op.demo.core.mapper.UserRoleMapper" >
    <resultMap id="BaseResultMap" type="com.op.demo.core.entity.UserRole" >
        <id column="user_role_id" property="userRoleId" jdbcType="INTEGER" />
        <result column="user_id" property="userId" jdbcType="INTEGER" />
        <result column="role_id" property="roleId" jdbcType="INTEGER" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <association column="user_id" property="user" javaType="com.op.demo.core.entity.User" resultMap="com.op.demo.core.mapper.UserMapper.BaseResultMap"></association>
        <association column="role_id" property="role" javaType="com.op.demo.core.entity.Role" resultMap="com.op.demo.core.mapper.RoleMapper.BaseResultMap"></association>
    </resultMap>
    <sql id="Base_Column_List" >
        user_role_id, user_id, role_id, remark, create_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from t_user_role
        where user_role_id = #{userRoleId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from t_user_role
        where user_role_id = #{userRoleId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.op.demo.core.entity.UserRole" >
        insert into t_user_role (user_role_id, user_id, role_id,
            remark, create_time)
        values (#{userRoleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER},
            #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="com.op.demo.core.entity.UserRole" >
        insert into t_user_role
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="userRoleId != null" >
                user_role_id,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="roleId != null" >
                role_id,
            </if>
            <if test="remark != null" >
                remark,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="userRoleId != null" >
                #{userRoleId,jdbcType=INTEGER},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null" >
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.op.demo.core.entity.UserRole" >
        update t_user_role
        <set >
            <if test="userId != null" >
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="roleId != null" >
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where user_role_id = #{userRoleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.op.demo.core.entity.UserRole" >
        update t_user_role
        set user_id = #{userId,jdbcType=INTEGER},
            role_id = #{roleId,jdbcType=INTEGER},
            remark = #{remark,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where user_role_id = #{userRoleId,jdbcType=INTEGER}
    </update>
    <select id="selectUserRoleByUserId" resultMap="BaseResultMap">
        select *
        from t_user_role ur
        left join t_user u on ur.user_id = u.user_id
        left join t_role r on ur.role_id = r.role_id
        where ur.user_id = #{userId,jdbcType=INTEGER}
    </select>
</mapper>